apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: "43.2.1"
    chart: kube-prometheus-stack
    helm:
     skipCrds: true
     values: |
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
        prometheus:
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: longhorn
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 20Gi

  destination:
    name: in-cluster
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`grafana.infra.sprint.luchtenberg.eu`)
    services:
    - name: kube-prometheus-stack-grafana
      port: 80
  tls:
    secretName: grafana-infra-sprint-luchtenberg-eu-production-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-infra-sprint-luchtenberg-eu
  namespace: monitoring
spec:
  secretName: grafana-infra-sprint-luchtenberg-eu-production-tls
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "grafana.infra.sprint.luchtenberg.eu"
  dnsNames:
    - "grafana.infra.sprint.luchtenberg.eu"
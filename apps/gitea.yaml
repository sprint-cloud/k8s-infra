apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gitea
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://dl.gitea.io/charts/
    chart: gitea
    helm:
      values: |
          # Default values for gitea.
          # This is a YAML-formatted file.
          # Declare variables to be passed into your templates.
          ## @section Global
          #
          ## @param global.imageRegistry global image registry override
          ## @param global.imagePullSecrets global image pull secrets override; can be extended by `imagePullSecrets`
          ## @param global.storageClass global storage class override
          global:
            imageRegistry: ""
            ## E.g.
            ## imagePullSecrets:
            ##   - myRegistryKeySecretName
            ##
            imagePullSecrets: []
            storageClass: ""

          ## @param replicaCount number of replicas for the statefulset
          replicaCount: 1

          ## @param clusterDomain cluster domain
          clusterDomain: cluster.local

          ## @section Image
          ## @param image.registry image registry, e.g. gcr.io,docker.io
          ## @param image.repository Image to start for this pod
          ## @param image.tag Visit: [Image tag](https://hub.docker.com/r/gitea/gitea/tags?page=1&ordering=last_updated). Defaults to `appVersion` within Chart.yaml.
          ## @param image.pullPolicy Image pull policy
          ## @param image.rootless Wether or not to pull the rootless version of Gitea, only works on Gitea 1.14.x or higher
          image:
            registry: ""
            repository: gitea/gitea
            # Overrides the image tag whose default is the chart appVersion.
            tag: ""
            pullPolicy: Always
            rootless: false # only possible when running 1.14 or later

          ## @param imagePullSecrets Secret to use for pulling the image
          imagePullSecrets: []

          ingress:
            enabled: false
  
          ## @section StatefulSet
          #
          ## @param resources Kubernetes resources
          resources: {}
            # We usually recommend not to specify default resources and to leave this as a conscious
            # choice for the user. This also increases chances charts run on environments with little
            # resources, such as Minikube. If you do want to specify resources, uncomment the following
            # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
            # limits:
            #   cpu: 100m
            #   memory: 128Mi
            # requests:
            #   cpu: 100m
            #   memory: 128Mi

   
          persistence:
            enabled: true
            existingClaim:
            size: 10Gi
            accessModes:
              - ReadWriteOnce
            labels: {}
            annotations: {}
            storageClass:
            subPath:
     
          gitea:
            ## @param gitea.admin.username Username for the Gitea admin user
            ## @param gitea.admin.existingSecret Use an existing secret to store admin user credentials
            ## @param gitea.admin.password Password for the Gitea admin user
            ## @param gitea.admin.email Email for the Gitea admin user
            admin:
              existingSecret: gitea-admin-secret
              # existingSecret:
              # username: gitea_admin
              # password: r8sA8CPHD9!bt6d
              # email: "gitea@local.domain"

            ## @param gitea.metrics.enabled Enable Gitea metrics
            ## @param gitea.metrics.serviceMonitor.enabled Enable Gitea metrics service monitor
            metrics:
              enabled: false
              serviceMonitor:
                enabled: false
                #  additionalLabels:
                #    prometheus-release: prom1

            ## @param gitea.ldap LDAP configuration
            ldap: []
              # - name: "LDAP 1"
              #  existingSecret:
              #  securityProtocol:
              #  host:
              #  port:
              #  userSearchBase:
              #  userFilter:
              #  adminFilter:
              #  emailAttribute:
              #  bindDn:
              #  bindPassword:
              #  usernameAttribute:
              #  publicSSHKeyAttribute:

            # Either specify inline `key` and `secret` or refer to them via `existingSecret`
            ## @param gitea.oauth OAuth configuration
            oauth: []
              # - name: 'OAuth 1'
              #   provider:
              #   key:
              #   secret:
              #   existingSecret:
              #   autoDiscoverUrl:
              #   useCustomUrls:
              #   customAuthUrl:
              #   customTokenUrl:
              #   customProfileUrl:
              #   customEmailUrl:

            ## @param gitea.config  Configuration for the Gitea server,ref: [config-cheat-sheet](https://docs.gitea.io/en-us/config-cheat-sheet/)
            config: 
              APP_NAME: "SPRINT: Cloud ontwikkel omgeving."
              RUN_MODE: dev
              server:
                SSH_PORT: 22
                DOMAIN: code.sprint.luchtenberg.eu
                ROOT_URL: https://code.sprint.luchtenberg.eu
              service:
                DISABLE_REGISTRATION: "true"

            #
            #  security:
            #    PASSWORD_COMPLEXITY: spec

            ## @param gitea.additionalConfigSources Additional configuration from secret or configmap
            additionalConfigSources: []
            #   - secret:
            #       secretName: gitea-app-ini-oauth
            #   - configMap:
            #       name: gitea-app-ini-plaintext

            ## @param gitea.additionalConfigFromEnvs Additional configuration sources from environment variables
            additionalConfigFromEnvs: [] 
            
            ## @param gitea.podAnnotations Annotations for the Gitea pod
            podAnnotations: {}

            ## @section LivenessProbe
            #
            ## @param gitea.livenessProbe.enabled Enable liveness probe
            ## @param gitea.livenessProbe.tcpSocket.port Port to probe for liveness
            ## @param gitea.livenessProbe.initialDelaySeconds Initial delay before liveness probe is initiated
            ## @param gitea.livenessProbe.timeoutSeconds Timeout for liveness probe
            ## @param gitea.livenessProbe.periodSeconds Period for liveness probe
            ## @param gitea.livenessProbe.successThreshold Success threshold for liveness probe
            ## @param gitea.livenessProbe.failureThreshold Failure threshold for liveness probe
            # Modify the liveness probe for your needs or completely disable it by commenting out.
            livenessProbe:
              enabled: true
              tcpSocket:
                port: http
              initialDelaySeconds: 200
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 10

            ## @section ReadinessProbe
            #
            ## @param gitea.readinessProbe.enabled Enable readiness probe
            ## @param gitea.readinessProbe.tcpSocket.port Port to probe for readiness
            ## @param gitea.readinessProbe.initialDelaySeconds Initial delay before readiness probe is initiated
            ## @param gitea.readinessProbe.timeoutSeconds Timeout for readiness probe
            ## @param gitea.readinessProbe.periodSeconds Period for readiness probe
            ## @param gitea.readinessProbe.successThreshold Success threshold for readiness probe
            ## @param gitea.readinessProbe.failureThreshold Failure threshold for readiness probe
            # Modify the readiness probe for your needs or completely disable it by commenting out.
            readinessProbe:
              enabled: true
              tcpSocket:
                port: http
              initialDelaySeconds: 5
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3

            # # Uncomment the startup probe to enable and modify it for your needs.
            ## @section StartupProbe
            #
            ## @param gitea.startupProbe.enabled Enable startup probe
            ## @param gitea.startupProbe.tcpSocket.port Port to probe for startup
            ## @param gitea.startupProbe.initialDelaySeconds Initial delay before startup probe is initiated
            ## @param gitea.startupProbe.timeoutSeconds Timeout for startup probe
            ## @param gitea.startupProbe.periodSeconds Period for startup probe
            ## @param gitea.startupProbe.successThreshold Success threshold for startup probe
            ## @param gitea.startupProbe.failureThreshold Failure threshold for startup probe
            startupProbe:
              enabled: false
              tcpSocket:
                port: http
              initialDelaySeconds: 60
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 10

          ## @section Memcached
          #
          ## @param memcached.enabled Memcached is loaded as a dependency from [Bitnami](https://github.com/bitnami/charts/tree/master/bitnami/memcached) if enabled in the values. Complete Configuration can be taken from their website.
          ## @param memcached.service.port Port for Memcached
          memcached:
            enabled: true
            service:
              port: 11211

          ## @section PostgreSQL
          #
          ## @param postgresql.enabled Enable PostgreSQL
          ## @param postgresql.global.postgresql.postgresqlDatabase PostgreSQL database (overrides postgresqlDatabase)
          ## @param postgresql.global.postgresql.postgresqlUsername PostgreSQL username (overrides postgresqlUsername)
          ## @param postgresql.global.postgresql.postgresqlPassword PostgreSQL admin password (overrides postgresqlPassword)
          ## @param postgresql.global.postgresql.servicePort PostgreSQL port (overrides service.port)
          ## @param postgresql.persistence.size PVC Storage Request for PostgreSQL volume
          postgresql:
            enabled: true
            global:
              postgresql:
                postgresqlDatabase: gitea
                postgresqlUsername: gitea
                postgresqlPassword: rivohdieReish8ciiVie
                servicePort: 5432
            persistence:
              size: 10Gi

          # By default, removed or moved settings that still remain in a user defined values.yaml will cause Helm to fail running the install/update.
          # Set it to false to skip this basic validation check.
          ## @section Advanced
          ## @param checkDeprecation Set it to false to skip this basic validation check.
          checkDeprecation: true

  destination:
    name: in-cluster
    namespace: gitea
  syncPolicy:
    syncOptions:
      - CreateNamespace=true